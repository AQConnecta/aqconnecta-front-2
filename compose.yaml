services:
  db:
    image: mariadb:11.4
    container_name: aq-connecta-db
    command: [ "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci" ]
    environment:
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpass}
      MARIADB_DATABASE: ${MYSQL_DB:-aqConnecta}
      MARIADB_USER: ${MYSQL_USER:-aq_user}
      MARIADB_PASSWORD: ${MYSQL_PASSWORD:-aq_password}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
    healthcheck:
      # Use CMD-SHELL para poder usar $$ (escapa para avaliar dentro do container)
      test: [ "CMD-SHELL", "mariadb -h 127.0.0.1 -uroot -p${DB_ROOT_PASSWORD:-rootpass} -e 'SELECT 1' >/dev/null 2>&1 || exit 1" ]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 30s
    restart: unless-stopped

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
    image: localstack/localstack:4.8.1
    ports:
      - "127.0.0.1:4566:4566" # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559" # external services port range
    environment:
      # LocalStack configuration: https://docs.localstack.cloud/references/configuration/
      - DEBUG=${DEBUG:-0}
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4566/_localstack/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  backend:
    # Constrói sua imagem Java (Dockerfile multi-stage com Maven que te passei)
    build:
      context: https://github.com/AQConnecta/AQConnecta-back.git#master
      dockerfile: Dockerfile
      # Se quiser forçar profile no build (opcional):
      args:
        SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-prod}
    container_name: aqconnecta-backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Profile ativo em runtime
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-prod}

      # DB (Spring lê do application-*.properties via env placeholders)
      MYSQL_HOST: db
      MYSQL_PORT: 3306
      MYSQL_DB: ${MYSQL_DB:-aqConnecta}
      MYSQL_USER: ${MYSQL_USER:-aq_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-aq_password}

      # Flyway / JPA / Logging (opcionais)
      FLYWAY_ENABLED: ${FLYWAY_ENABLED:-true}
      FLYWAY_BASELINE_ON_MIGRATE: ${FLYWAY_BASELINE_ON_MIGRATE:-true}
      JPA_DDL_AUTO: ${JPA_DDL_AUTO:-none}
      LOG_LEVEL_ROOT: ${LOG_LEVEL_ROOT:-INFO}
      LOG_LEVEL_APP: ${LOG_LEVEL_APP:-INFO}

      # CORS: a URL pública do frontend
      CORS_URLS: ${CORS_URLS:-http://localhost:8080}

      # Server
      PORT: ${BACKEND_HTTP_PORT:-8080}

      # JWT
      JWT_SECRET: ${JWT_SECRET:-troque-isto}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-604800000}

      # AWS
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET: ${AWS_SECRET}
      BUCKET: ${BUCKET}
      # E-mail (preencha no .env em produção)
      MAIL_HOST: ${MAIL_HOST:-smtp.gmail.com}
      MAIL_PORT: ${MAIL_PORT:-465}
      MAIL_USERNAME: ${MAIL_USERNAME:-}
      MAIL_PASSWORD: ${MAIL_PASSWORD:-}
      MAIL_SMTP_AUTH: ${MAIL_SMTP_AUTH:-true}
      MAIL_SMTP_CONNECTION_TIMEOUT: ${MAIL_SMTP_CONNECTION_TIMEOUT:-5000}
      MAIL_SMTP_TIMEOUT: ${MAIL_SMTP_TIMEOUT:-5000}
      MAIL_SMTP_WRITETIMEOUT: ${MAIL_SMTP_WRITETIMEOUT:-5000}
      MAIL_SMTP_STARTTLS_ENABLE: ${MAIL_SMTP_STARTTLS_ENABLE:-true}
      MAIL_SMTP_STARTTLS_REQUIRED: ${MAIL_SMTP_STARTTLS_REQUIRED:-true}
      MAIL_SMTP_SSL_PROTOCOLS: ${MAIL_SMTP_SSL_PROTOCOLS:-TLSv1.2}
    ports:
      - "${BACKEND_HTTP_PORT}:8080" # host:container
    restart: unless-stopped

volumes:
  mariadb_data:
